// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/Modal Render: match snapshot 1`] = `
.c17 {
  background-color: inherit;
  color: #0067C5;
  border-color: #0067C5;
}

.c17:hover:not(:disabled) {
  background-color: #0067C5;
  color: #FFFFFF;
}

.c17:hover:not(:disabled) svg path {
  stroke: #FFFFFF;
}

.c17 svg path {
  stroke: #0067C5;
}

ui-fss.g6[id="c16"] {
  content: "c17,";
}

.c15 {
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  background-color: #0067C5;
  color: #FFFFFF;
  border-color: #0067C5;
}

.c15:hover:not(:disabled) {
  background-color: #0067C5;
  border-color: #0067C5;
  color: #FFFFFF;
}

.c15:hover:not(:disabled) svg path {
  stroke: #FFFFFF;
}

.c15:disabled {
  color: #FFFFFF;
  background-color: #B7B1A9;
}

.c15 svg path {
  stroke: #0067C5;
}

ui-fss.g7[id="c14"] {
  content: "c15,";
}

.c1 {
  background-color: #FFF;
  display: block;
  padding: 1rem 1rem 1rem 1rem;
  border-radius: 4px;
  position: relative;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  overflow: inherit;
  max-height: 100%;
  margin-bottom: 0;
  z-index: 1010;
  color: #3E3832;
  background-color: #FFFFFF;
}

ui-fss.g18[id="c0"] {
  content: "c1,";
}

.c5 {
  position: absolute !important;
  right: 0.5rem;
  top: 0.5rem;
  z-index: 999;
}

ui-fss.g20[id="c4"] {
  content: "c5,";
}

.c7 {
  text-align: center;
}

ui-fss.g21[id="c6"] {
  content: "c7,";
}

.c9 {
  margin: 1.5rem;
  text-align: center;
}

ui-fss.g22[id="c8"] {
  content: "c9,";
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

ui-fss.g23[id="c10"] {
  content: "c11,";
}

.c13 {
  margin-right: 1rem;
  margin-top: 0.5rem;
  margin-botton: 0.5rem;
}

ui-fss.g24[id="c12"] {
  content: "c13,";
}

.c3 {
  overflow: auto;
  max-height: 85vh;
}

.c3.icon {
  margin-top: 3rem;
}

.c3.burrons {
  margin-top: 3rem;
}

ui-fss.g26[id="c2"] {
  content: "c3,";
}

<Modal
  closeButton={true}
  highContrast={false}
  modal={
    Object {
      "modalButtons": Array [
        Object {
          "main": true,
          "onClick": [MockFunction],
          "text": "modalMainButtonText",
        },
        Object {
          "onClick": [MockFunction],
          "text": "modalOtherButtonText",
        },
      ],
      "modalText": "mockModalText",
      "modalTitle": "mockModalTitle",
    }
  }
  onModalClose={[MockFunction]}
>
  <Component
    theme={
      Object {
        "alternative-background-color": "#E9E7E7",
        "black": "#000000",
        "border-radius-base": "4px",
        "border-radius-large": "6px",
        "border-radius-small": "2px",
        "container-desktop": "(940px + @grid-gutter-width)",
        "container-large-desktop": "(1140px + @grid-gutter-width)",
        "container-lg": "(1140px + @grid-gutter-width)",
        "container-md": "(940px + @grid-gutter-width)",
        "container-sm": "(720px + @grid-gutter-width)",
        "container-tablet": "(720px + @grid-gutter-width)",
        "fokusFarge": "#254a6c",
        "grayBackground": "#E9E7E7",
        "grayIcon": "#B7B1A9",
        "grayInactive": "#78706A",
        "grayModia": "#333333",
        "grid-columns": "12",
        "grid-float-breakpoint": "768px",
        "grid-float-breakpoint-max": "(@grid-float-breakpoint - 1)",
        "grid-gutter-width": "16px",
        "inverted-font-color": "#FFFFFF",
        "line-height-large": "1.3333333",
        "line-height-small": "1.5",
        "main-active-color": "#a3dff3",
        "main-background-color": "#FFFFFF",
        "main-border-color": "#78706A",
        "main-border-radius": "4px",
        "main-disabled-color": "#B7B1A9",
        "main-error-color": "#BA3A26",
        "main-focus-color": "#254a6c",
        "main-font-color": "#3E3832",
        "main-hover-color": "#e0f4fb",
        "main-interactive-color": "#0067C5",
        "main-success-color": "#06893A",
        "main-warning-color": "#FF9100",
        "navBla": "#0067C5",
        "navBlaDarken20": "#0c5da7",
        "navBlaDarken40": "#18548a",
        "navBlaDarken60": "#254a6c",
        "navBlaDarken80": "#31414f",
        "navBlaLighten20": "#3385d0",
        "navBlaLighten40": "#66a3dc",
        "navBlaLighten60": "#99c2e7",
        "navBlaLighten80": "#cce0f3",
        "navDypBla": "#005B82",
        "navDypBlaDarken20": "#0c5472",
        "navDypBlaDarken40": "#184d62",
        "navDypBlaDarken60": "#254652",
        "navDypBlaDarken80": "#313f42",
        "navDypBlaLighten20": "#337b9b",
        "navDypBlaLighten40": "#669cb4",
        "navDypBlaLighten60": "#99bdcd",
        "navDypBlaLighten80": "#ccdee6",
        "navGra20": "#C6C2BF",
        "navGra40": "#B7B1A9",
        "navGra60": "#78706A",
        "navGra80": "#59514B",
        "navGronn": "#06893A",
        "navGronnDarken20": "#117838",
        "navGronnDarken40": "#1c6836",
        "navGronnDarken60": "#275835",
        "navGronnDarken80": "#324833",
        "navGronnLighten20": "#37a061",
        "navGronnLighten40": "#69b888",
        "navGronnLighten60": "#9bcfb0",
        "navGronnLighten80": "#cde7d7",
        "navLilla": "#634689",
        "navLillaDarken20": "#5b4377",
        "navLillaDarken40": "#544066",
        "navLillaDarken60": "#4c3d54",
        "navLillaDarken80": "#453a43",
        "navLillaLighten20": "#826ba0",
        "navLillaLighten40": "#a190b8",
        "navLillaLighten60": "#c0b5cf",
        "navLillaLighten80": "#dfdae7",
        "navLimeGronn": "#A2AD00",
        "navLimeGronnDarken20": "#8e950a",
        "navLimeGronnDarken40": "#7a7e14",
        "navLimeGronnDarken60": "#66661e",
        "navLimeGronnDarken80": "#524f28",
        "navLimeGronnLighten20": "#b4bd33",
        "navLimeGronnLighten40": "#c7cd66",
        "navLimeGronnLighten60": "#d9de99",
        "navLimeGronnLighten80": "#eceecc",
        "navLysBla": "#66CBEC",
        "navLysBlaDarken20": "#5eadc6",
        "navLysBlaDarken40": "#5690a1",
        "navLysBlaDarken60": "#4e727c",
        "navLysBlaDarken80": "#465557",
        "navLysBlaLighten20": "#84d5ef",
        "navLysBlaLighten40": "#a3dff3",
        "navLysBlaLighten60": "#c1eaf7",
        "navLysBlaLighten80": "#e0f4fb",
        "navLysGra": "#E9E7E7",
        "navMorkGra": "#3E3832",
        "navOransje": "#FF9100",
        "navOransjeDarken20": "#d87f0a",
        "navOransjeDarken40": "#b16d14",
        "navOransjeDarken60": "#8b5b1e",
        "navOransjeDarken80": "#644928",
        "navOransjeLighten20": "#ffa733",
        "navOransjeLighten40": "#ffbd66",
        "navOransjeLighten60": "#ffd399",
        "navOransjeLighten80": "#ffe9cc",
        "navRod": "#C30000",
        "navRodDarken20": "#a80b0a",
        "navRodDarken40": "#8d1614",
        "navRodDarken60": "#73211e",
        "navRodDarken80": "#582c28",
        "navRodLighten20": "#cf3333",
        "navRodLighten40": "#db6666",
        "navRodLighten60": "#e79999",
        "navRodLighten80": "#f3cccc",
        "orangeFocus": "#FFBD66",
        "orangeFocusDarken20": "#d8a25b",
        "orangeFocusDarken40": "#b18751",
        "orangeFocusDarken60": "#8b6d46",
        "orangeFocusDarken80": "#64523c",
        "orangeFocusLighten20": "#ffca84",
        "orangeFocusLighten40": "#ffd7a3",
        "orangeFocusLighten60": "#ffe4c1",
        "orangeFocusLighten80": "#fff1e0",
        "padding-base-horizontal": "12px",
        "padding-base-vertical": "6px",
        "padding-large-horizontal": "16px",
        "padding-large-vertical": "10px",
        "padding-small-horizontal": "10px",
        "padding-small-vertical": "5px",
        "padding-xs-horizontal": "5px",
        "padding-xs-vertical": "1px",
        "pinkErrorBg": "#F3E3E3",
        "redError": "#BA3A26",
        "redErrorDarken20": "#a13928",
        "redErrorDarken40": "#88392a",
        "redErrorDarken60": "#6f382d",
        "redErrorDarken80": "#56382f",
        "redErrorLighten20": "#c76151",
        "redErrorLighten40": "#d5887c",
        "redErrorLighten60": "#e3b0a8",
        "redErrorLighten80": "#f1d7d3",
        "screen-desktop": "992px",
        "screen-lg": "1200px",
        "screen-lg-desktop": "1200px",
        "screen-lg-min": "1200px",
        "screen-md": "992px",
        "screen-md-max": "(@screen-lg-min - 1)",
        "screen-md-min": "992px",
        "screen-sm": "768px",
        "screen-sm-max": "(@screen-md-min - 1)",
        "screen-sm-min": "768px",
        "screen-tablet": "768px",
        "screen-xs-max": "(@screen-sm-min - 1)",
        "type": "theme",
        "white": "#FFFFFF",
      }
    }
  >
    <Memo(l) />
    <Styled(Modal)
      isOpen={true}
      onRequestClose={[Function]}
      overlayClassName="modal__overlay"
    >
      <Modal
        ariaHideApp={true}
        bodyOpenClassName="ReactModal__Body--open"
        className="c0 c1"
        closeTimeoutMS={0}
        isOpen={true}
        onRequestClose={[Function]}
        overlayClassName="modal__overlay"
        parentSelector={[Function]}
        portalClassName="ReactModalPortal"
        role="dialog"
        shouldCloseOnEsc={true}
        shouldCloseOnOverlayClick={true}
        shouldFocusAfterRender={true}
        shouldReturnFocusAfterClose={true}
      >
        <Portal
          containerInfo={
            .c17 {
  background-color: inherit;
  color: #0067C5;
  border-color: #0067C5;
}

.c17:hover:not(:disabled) {
  background-color: #0067C5;
  color: #FFFFFF;
}

.c17:hover:not(:disabled) svg path {
  stroke: #FFFFFF;
}

.c17 svg path {
  stroke: #0067C5;
}

ui-fss.g6[id="c16"] {
  content: "c17,";
}

.c15 {
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  background-color: #0067C5;
  color: #FFFFFF;
  border-color: #0067C5;
}

.c15:hover:not(:disabled) {
  background-color: #0067C5;
  border-color: #0067C5;
  color: #FFFFFF;
}

.c15:hover:not(:disabled) svg path {
  stroke: #FFFFFF;
}

.c15:disabled {
  color: #FFFFFF;
  background-color: #B7B1A9;
}

.c15 svg path {
  stroke: #0067C5;
}

ui-fss.g7[id="c14"] {
  content: "c15,";
}

.c1 {
  background-color: #FFF;
  display: block;
  padding: 1rem 1rem 1rem 1rem;
  border-radius: 4px;
  position: relative;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  overflow: inherit;
  max-height: 100%;
  margin-bottom: 0;
  z-index: 1010;
  color: #3E3832;
  background-color: #FFFFFF;
}

ui-fss.g18[id="c0"] {
  content: "c1,";
}

.c5 {
  position: absolute !important;
  right: 0.5rem;
  top: 0.5rem;
  z-index: 999;
}

ui-fss.g20[id="c4"] {
  content: "c5,";
}

.c7 {
  text-align: center;
}

ui-fss.g21[id="c6"] {
  content: "c7,";
}

.c9 {
  margin: 1.5rem;
  text-align: center;
}

ui-fss.g22[id="c8"] {
  content: "c9,";
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

ui-fss.g23[id="c10"] {
  content: "c11,";
}

.c13 {
  margin-right: 1rem;
  margin-top: 0.5rem;
  margin-botton: 0.5rem;
}

ui-fss.g24[id="c12"] {
  content: "c13,";
}

.c3 {
  overflow: auto;
  max-height: 85vh;
}

.c3.icon {
  margin-top: 3rem;
}

.c3.burrons {
  margin-top: 3rem;
}

ui-fss.g26[id="c2"] {
  content: "c3,";
}

<div
              class="ReactModalPortal"
            >
              <div
                class="ReactModal__Overlay ReactModal__Overlay--after-open modal__overlay"
              >
                <div
                  class="ReactModal__Content ReactModal__Content--after-open c0 c1"
                  role="dialog"
                  tabindex="-1"
                >
                  <div
                    class="c2 c3"
                  >
                    <button
                      class="lukknapp c4 c5"
                      data-test-id="c-modal__close-button-id"
                    >
                      <span
                        class="text-hide"
                      />
                    </button>
                    <h2
                      class="typo-undertittel c6 c7"
                      data-test-id="c-modal__title-id"
                    >
                      mockModalTitle
                    </h2>
                    <div
                      class="c8 c9"
                      data-test-id="c-modal__text-id"
                    >
                      mockModalText
                    </div>
                  </div>
                  <div
                    class="c10 c11"
                  >
                    <div
                      class="c12 c13"
                    >
                      <button
                        class="knapp c14 c15 knapp--hoved"
                        data-test-id="c-modal__button-id-0"
                        id="c-modal__button-id-0"
                        type="submit"
                      >
                        modalMainButtonText
                      </button>
                    </div>
                    <div
                      class="c12 c13"
                    >
                      <button
                        class="knapp c16 c17 knapp--standard"
                        data-test-id="c-modal__button-id-1"
                        id="c-modal__button-id-1"
                        type="submit"
                      >
                        modalOtherButtonText
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          }
        >
          <ModalPortal
            ariaHideApp={true}
            bodyOpenClassName="ReactModal__Body--open"
            className="c0 c1"
            closeTimeoutMS={0}
            defaultStyles={
              Object {
                "content": Object {
                  "WebkitOverflowScrolling": "touch",
                  "background": "#fff",
                  "border": "1px solid #ccc",
                  "borderRadius": "4px",
                  "bottom": "40px",
                  "left": "40px",
                  "outline": "none",
                  "overflow": "auto",
                  "padding": "20px",
                  "position": "absolute",
                  "right": "40px",
                  "top": "40px",
                },
                "overlay": Object {
                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                },
              }
            }
            isOpen={true}
            onRequestClose={[Function]}
            overlayClassName="modal__overlay"
            parentSelector={[Function]}
            portalClassName="ReactModalPortal"
            role="dialog"
            shouldCloseOnEsc={true}
            shouldCloseOnOverlayClick={true}
            shouldFocusAfterRender={true}
            shouldReturnFocusAfterClose={true}
            style={
              Object {
                "content": Object {},
                "overlay": Object {},
              }
            }
          >
            <div
              className="ReactModal__Overlay ReactModal__Overlay--after-open modal__overlay"
              onClick={[Function]}
              onMouseDown={[Function]}
              style={Object {}}
            >
              <div
                className="ReactModal__Content ReactModal__Content--after-open c0 c1"
                onClick={[Function]}
                onKeyDown={[Function]}
                onMouseDown={[Function]}
                onMouseUp={[Function]}
                role="dialog"
                style={Object {}}
                tabIndex="-1"
              >
                <styled.div
                  className=""
                >
                  <div
                    className="c2 c3"
                  >
                    <Styled(Lukknapp)
                      data-test-id="c-modal__close-button-id"
                      onClick={[Function]}
                    >
                      <Lukknapp
                        bla={false}
                        className="c4 c5"
                        data-test-id="c-modal__close-button-id"
                        hvit={false}
                        onClick={[Function]}
                        overstHjorne={false}
                      >
                        <button
                          className="lukknapp c4 c5"
                          data-test-id="c-modal__close-button-id"
                          onClick={[Function]}
                        >
                          <span
                            className="text-hide"
                          />
                        </button>
                      </Lukknapp>
                    </Styled(Lukknapp)>
                    <Styled(Undertittel)
                      data-test-id="c-modal__title-id"
                    >
                      <Undertittel
                        className="c6 c7"
                        data-test-id="c-modal__title-id"
                      >
                        <TypografiBase
                          className="c6 c7"
                          data-test-id="c-modal__title-id"
                          type="undertittel"
                        >
                          <h2
                            className="typo-undertittel c6 c7"
                            data-test-id="c-modal__title-id"
                          >
                            mockModalTitle
                          </h2>
                        </TypografiBase>
                      </Undertittel>
                    </Styled(Undertittel)>
                    <styled.div
                      data-test-id="c-modal__text-id"
                    >
                      <div
                        className="c8 c9"
                        data-test-id="c-modal__text-id"
                      >
                        mockModalText
                      </div>
                    </styled.div>
                  </div>
                </styled.div>
                <styled.div>
                  <div
                    className="c10 c11"
                  >
                    <styled.div
                      key="0"
                    >
                      <div
                        className="c12 c13"
                      >
                        <Styled(Hovedknapp)
                          data-test-id="c-modal__button-id-0"
                          disabled={false}
                          id="c-modal__button-id-0"
                          key="modalMainButtonText"
                          onClick={[Function]}
                        >
                          <Hovedknapp
                            className="c14 c15"
                            data-test-id="c-modal__button-id-0"
                            disabled={false}
                            id="c-modal__button-id-0"
                            onClick={[Function]}
                          >
                            <KnappBase
                              autoDisableVedSpinner={false}
                              className="c14 c15"
                              data-test-id="c-modal__button-id-0"
                              disabled={false}
                              htmlType="submit"
                              id="c-modal__button-id-0"
                              inaktivKlasseVedDisabled={false}
                              kompakt={false}
                              mini={false}
                              onClick={[Function]}
                              spinner={false}
                              type="hoved"
                            >
                              <button
                                className="knapp c14 c15 knapp--hoved"
                                data-test-id="c-modal__button-id-0"
                                disabled={false}
                                id="c-modal__button-id-0"
                                onClick={[Function]}
                                type="submit"
                              >
                                modalMainButtonText
                              </button>
                            </KnappBase>
                          </Hovedknapp>
                        </Styled(Hovedknapp)>
                      </div>
                    </styled.div>
                    <styled.div
                      key="1"
                    >
                      <div
                        className="c12 c13"
                      >
                        <Styled(KnappBase)
                          data-test-id="c-modal__button-id-1"
                          disabled={false}
                          id="c-modal__button-id-1"
                          key="modalOtherButtonText"
                          onClick={[Function]}
                        >
                          <KnappBase
                            autoDisableVedSpinner={false}
                            className="c16 c17"
                            data-test-id="c-modal__button-id-1"
                            disabled={false}
                            htmlType="submit"
                            id="c-modal__button-id-1"
                            inaktivKlasseVedDisabled={false}
                            kompakt={false}
                            mini={false}
                            onClick={[Function]}
                            spinner={false}
                            type="standard"
                          >
                            <button
                              className="knapp c16 c17 knapp--standard"
                              data-test-id="c-modal__button-id-1"
                              disabled={false}
                              id="c-modal__button-id-1"
                              onClick={[Function]}
                              type="submit"
                            >
                              modalOtherButtonText
                            </button>
                          </KnappBase>
                        </Styled(KnappBase)>
                      </div>
                    </styled.div>
                  </div>
                </styled.div>
              </div>
            </div>
          </ModalPortal>
        </Portal>
      </Modal>
    </Styled(Modal)>
  </Component>
</Modal>
`;
