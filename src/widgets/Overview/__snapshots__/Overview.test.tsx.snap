// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`widgets/Overview/Overview Render: match snapshot 1`] = `
.c1 {
  border-style: solid;
}

.c1.ekspanderbartPanel--apen .ReactCollapse--collapse {
  will-change: max-height,height;
  max-height: 150em;
  -webkit-animation: lejruX 250ms ease;
  animation: lejruX 250ms ease;
}

.c1.ekspanderbartPanel--lukket .ReactCollapse--collapse {
  will-change: max-height,height;
  max-height: 0;
  -webkit-animation: fywWsj 250ms ease;
  animation: fywWsj 250ms ease;
}

.c1 .ekspanderbartPanel__knapp {
  background: none;
  border: none;
}

.c1 .ekspanderbartPanel__hode:focus,
.c1 .ekspanderbartPanel__hode--focus {
  box-shadow: 0 0 0 3px !important;
  outline: none;
}

.c1 .ekspanderbartPanel__hode {
  width: auto;
}

.c1 .ekspanderbartPanel__hode:hover {
  background-color: !important;
}

.c1 p {
  font-size: inherit;
  line-height: inherit;
}

ui-fss.g2[id="c0"] {
  content: "c1,";
}

.c7 {
  display: inline-block;
  margin-left: 1rem;
}

ui-fss.g31[id="c6"] {
  content: "c7,";
}

.c5 {
  min-width: 40px;
  min-height: 40px;
  background-color: whitesmoke;
  border-radius: 100px;
  -webkit-transition: width .6s ease;
  transition: width .6s ease;
  -webkit-animation: da-daAO 1s linear infinite;
  animation: da-daAO 1s linear infinite;
  background-image: linear-gradient(45deg,hsla(90,90%,90%,.15) 25%,transparent 0,transparent 50%,hsla(90,90%,90%,.15) 0,hsla(90,90%,90%,.15) 75%,transparent 0,transparent);
}

ui-fss.g54[id="c4"] {
  content: "c5,";
}

.c11 {
  min-width: 50%;
  -webkit-transition: width .6s ease;
  transition: width .6s ease;
  background-color: whitesmoke;
  -webkit-animation: da-daAO 1s linear infinite;
  animation: da-daAO 1s linear infinite;
  background-image: linear-gradient(45deg,hsla(90,90%,90%,.15) 25%,transparent 0,transparent 50%,hsla(90,90%,90%,.15) 0,hsla(90,90%,90%,.15) 75%,transparent 0,transparent);
}

ui-fss.g55[id="c10"] {
  content: "c11,";
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

ui-fss.g56[id="c2"] {
  content: "c3,";
}

.c9 {
  height: 40px;
  min-height: 40px;
  width: 100%;
}

ui-fss.g57[id="c8"] {
  content: "c9,";
}

<Overview
  highContrast={false}
  onUpdate={[MockFunction]}
  skipMount={false}
  widget={
    Object {
      "i": "i",
      "options": Object {
        "collapsed": false,
      },
      "title": "foo",
      "type": "foo",
      "visible": true,
    }
  }
>
  <div
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <ExpandingPanel
      collapseProps={
        Object {
          "id": "w-overview-id",
        }
      }
      data-test-id="w-overview-id"
      heading={
        <PersonTitle
          gettingPersonInfo={false}
        />
      }
      onClose={[Function]}
      onOpen={[Function]}
      open={true}
    >
      <styled.div
        className="ekspanderbartPanel ekspanderbartPanel--apen"
        style={Object {}}
      >
        <div
          className="c0 c1 ekspanderbartPanel ekspanderbartPanel--apen"
          style={Object {}}
        >
          <div
            aria-controls="w-overview-id"
            aria-expanded={true}
            className="ekspanderbartPanel__hode"
            data-test-id="c-expandingpanel__head-id"
            onClick={[Function]}
            onKeyDown={[Function]}
            role="button"
            tabIndex={0}
          >
            <div
              className="ekspanderbartPanel__flex-wrapper"
              data-test-id="c-expandingpanel__body-id"
            >
              <PersonTitle
                gettingPersonInfo={false}
              >
                <PersonLoading>
                  <styled.div>
                    <div
                      className="c2 c3"
                    >
                      <LoadingImage>
                        <styled.div>
                          <div
                            className="c4 c5"
                          />
                        </styled.div>
                      </LoadingImage>
                      <styled.div>
                        <div
                          className="c6 c7"
                        />
                      </styled.div>
                      <Styled(LoadingText)>
                        <LoadingText
                          className="c8 c9"
                        >
                          <styled.div
                            className="c8 c9"
                          >
                            <div
                              className="c10 c11 c8 c9"
                            />
                          </styled.div>
                        </LoadingText>
                      </Styled(LoadingText)>
                    </div>
                  </styled.div>
                </PersonLoading>
              </PersonTitle>
              <button
                aria-expanded={true}
                aria-label="ui:open"
                className="ekspanderbartPanel__knapp"
                data-test-id="c-expandingpanel__button-id"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <span
                  className="ekspanderbartPanel__indikator"
                />
              </button>
            </div>
          </div>
          <UnmountClosed
            id="w-overview-id"
            isOpened={true}
            onRest={[Function]}
          >
            <Collapse
              checkTimeout={50}
              id="w-overview-id"
              initialStyle={
                Object {
                  "height": "0px",
                  "overflow": "hidden",
                }
              }
              isOpened={true}
              onRest={[Function]}
              onWork={[Function]}
              theme={
                Object {
                  "collapse": "ReactCollapse--collapse",
                  "content": "ReactCollapse--content",
                }
              }
            >
              <div
                aria-hidden={false}
                className="ReactCollapse--collapse"
                style={
                  Object {
                    "height": "auto",
                    "overflow": "initial",
                  }
                }
              >
                <div
                  className="ReactCollapse--content"
                >
                  <article
                    className="ekspanderbartPanel__innhold"
                    data-test-id="c-expandingpanel__content-id"
                  >
                    <PersonPanel
                      locale="nb"
                      personAvdods={
                        Array [
                          Object {
                            "aktoerId": "2865434801175",
                            "etternavn": "AVDØD1",
                            "fnr": "personFarFnr",
                            "fornavn": "MOR",
                            "fulltNavn": "MOR AVDØD1",
                            "mellomnavn": null,
                            "relasjon": "MOR",
                          },
                        ]
                      }
                    />
                  </article>
                </div>
              </div>
            </Collapse>
          </UnmountClosed>
        </div>
      </styled.div>
    </ExpandingPanel>
  </div>
</Overview>
`;
